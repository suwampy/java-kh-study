<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- DataSource 등록
		- DataSource는 서버 구동 시 동시에 연결이 되어야 하며
		  연결 정보 설정 시 root-context 가장 위쪽에 작성한다. 
		  그래야만 아래 작성 되는 설정에서 DataSource를 참조해서 사용할 수 있다. -->
	<!-- destroy-method = "close"
		주어진 세션을 자동으로 close 하라는 의미 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
	destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<!-- 트랜잭션 처리(commit/rollback)
		JDBC : Connection 객체
		MyBatis : SqlSession 객체
		Spring : TransactionManager 객체
	 -->
	<bean id="transactionManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 트랜잭션 매니저 추가 후 namespace에서 tx 추가 -->
	<!-- 트랜잭션 사용 방법 aop, 어노테이션 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" rollback-for="Exception"/>
			<tx:method name="insert*" rollback-for="Exception"/>
			<tx:method name="update*" rollback-for="Exception"/>
			<tx:method name="delete*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- namespace에서 aop 추가 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.kh.spring..*Impl.*(..))" 
		id="serviceMethod"/>
		<aop:advisor id="transactionAdvisor" pointcut-ref="serviceMethod"
		advice-ref="txAdvice"/>
	</aop:config>
	<!-- log4jdbc-remix 
	: 기존 dataSource id 변경 후 참조하는 proxyDataSource 만들기 -->
	<!-- <bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" 
	destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL] "/> 
			</bean>
		</property>
	</bean> -->
	
	<!-- 마이바티스 sqlSession 등록하기 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybatis-config.xml 설정 불러오기 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/>
	</bean>
	
	<!-- 파일 업로드 관련 Bean 등록 -->
	<!-- MultipartResolver -->
	<bean id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000"/>
		<property name="maxInMemorySize" value="100000000"/>
	</bean>
	<!-- 
	maxUploadSize
		: 한 요청 당 업로드가 허용되는 최대 용량을 바이트 단위로 설정.
		-1은 제한이 없다는 뜻으로 이 프로퍼티를 지정하지 않을 때의 기본 값.
		
	maxInMemorySize
		: 디스크에 저장하지 않고 메모리에 유지하도록 허용하는 바이트 단위의 최대 용량을 설정
		사이즈가 이보다 클 경우 이 사이즈 이상의 데이터는 파일에 저장. 기본 값은 10240 바이트.
	 -->
</beans>
